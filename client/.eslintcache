[{"C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\index.js":"1","C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\App.js":"2","C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\context\\UserAuthProvider.js":"3","C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\ProtectedRoute.js":"4","C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\context\\reducer.js":"5","C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\context\\setAuthToken.js":"6","C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\context\\UserAuthContext.js":"7","C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\components\\Login.js":"8","C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\components\\Footer.js":"9","C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\components\\Home.js":"10","C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\components\\About.js":"11","C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\components\\Reminders.js":"12","C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\components\\Header.js":"13","C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\components\\Dashboard.js":"14","C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\components\\UserAccount.js":"15","C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\components\\Feedback.js":"16","C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\components\\NewReminder.js":"17","C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\components\\Reminder.js":"18","C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\components\\Calender.js":"19","C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\components\\Register.js":"20","C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\components\\Log.js":"21"},{"size":327,"mtime":1621185473216,"results":"22","hashOfConfig":"23"},{"size":3939,"mtime":1641314600836,"results":"24","hashOfConfig":"23"},{"size":600,"mtime":1641317032787,"results":"25","hashOfConfig":"23"},{"size":600,"mtime":1611599526612,"results":"26","hashOfConfig":"23"},{"size":2772,"mtime":1630418668270,"results":"27","hashOfConfig":"23"},{"size":253,"mtime":1631350928566,"results":"28","hashOfConfig":"23"},{"size":117,"mtime":1609519987246,"results":"29","hashOfConfig":"23"},{"size":6761,"mtime":1621184886437,"results":"30","hashOfConfig":"23"},{"size":312,"mtime":1609589579096,"results":"31","hashOfConfig":"23"},{"size":800,"mtime":1622654150350,"results":"32","hashOfConfig":"23"},{"size":853,"mtime":1612116182203,"results":"33","hashOfConfig":"23"},{"size":1443,"mtime":1631350713403,"results":"34","hashOfConfig":"23"},{"size":1658,"mtime":1630576113711,"results":"35","hashOfConfig":"23"},{"size":1401,"mtime":1621184589494,"results":"36","hashOfConfig":"23"},{"size":1130,"mtime":1630417247902,"results":"37","hashOfConfig":"23"},{"size":4668,"mtime":1641316642407,"results":"38","hashOfConfig":"23"},{"size":5590,"mtime":1641316676303,"results":"39","hashOfConfig":"23"},{"size":1847,"mtime":1630592954021,"results":"40","hashOfConfig":"23"},{"size":4550,"mtime":1641316699484,"results":"41","hashOfConfig":"23"},{"size":3712,"mtime":1641379844524,"results":"42","hashOfConfig":"23"},{"size":3061,"mtime":1641316455871,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"chb82y",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\index.js",[],["90","91"],"C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\App.js",[],"C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\context\\UserAuthProvider.js",[],"C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\ProtectedRoute.js",[],"C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\context\\reducer.js",[],"C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\context\\setAuthToken.js",[],"C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\context\\UserAuthContext.js",[],"C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\components\\Login.js",[],["92","93"],"C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\components\\Footer.js",[],"C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\components\\Home.js",[],"C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\components\\About.js",[],"C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\components\\Reminders.js",[],"C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\components\\Header.js",[],"C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\components\\Dashboard.js",[],"C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\components\\UserAccount.js",[],"C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\components\\Feedback.js",[],"C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\components\\NewReminder.js",["94"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Calender from \"./Calender\";\r\nimport TimePicker from \"react-time-picker\";\r\nimport \"./NewReminder.css\";\r\nimport UserAuthContext from \"../context/UserAuthContext\";\r\nimport { UPDATE_REMINDER, ADD_REMINDER, UNSET_ID } from \"../context/reducer\";\r\nimport moment from \"moment\";\r\n\r\nconst NewReminder = () => {\r\n  const [error, setError] = useState(null);\r\n\r\n  const { state, dispatch } = useContext(UserAuthContext);\r\n\r\n  const currentReminder = state.currentId\r\n    ? state.reminders.find((p) => p._id === state.currentId)\r\n    : null;\r\n  const userEmail = state.user.email;\r\n  const userPhone = state.user.phone;\r\n  let d = new Date();\r\n\r\n  const [time, setTime] = useState(\r\n    state.currentId\r\n      ? moment(currentReminder.remindAt).format(\"HH:mm\")\r\n      : d.getHours() + \":\" + d.getMinutes()\r\n  );\r\n\r\n  const [date, setDate] = useState(\r\n    state.currentId\r\n      ? moment(currentReminder.remindAt).format(\"L\")\r\n      : d.toLocaleDateString()\r\n  );\r\n\r\n  const [data, setData] = useState({\r\n    title: \"\",\r\n    message: \"\",\r\n    phone: false,\r\n    email: true,\r\n    remindAt: new Date(`${date} ${time}`).toISOString(),\r\n    userEmail,\r\n    userPhone,\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (currentReminder !== null) {\r\n      setData(currentReminder);\r\n    } else {\r\n      setData({\r\n        title: \"\",\r\n        message: \"\",\r\n        phone: false,\r\n        email: true,\r\n        remindAt: new Date(`${date} ${time}`).toISOString(),\r\n        userEmail,\r\n        userPhone,\r\n      });\r\n    }\r\n  }, [currentReminder]);\r\n\r\n  const onChange = (e) => {\r\n    setData((prevData) => ({\r\n      ...prevData,\r\n      [e.target.name]: e.target.value,\r\n    }));\r\n  };\r\n\r\n  const handleTime = (value) => {\r\n    setTime(value);\r\n    setData((prevData) => ({\r\n      ...prevData,\r\n      remindAt: new Date(`${date} ${value}`).toISOString(),\r\n    }));\r\n  };\r\n\r\n  const handleDate = (value) => {\r\n    setDate(value);\r\n    setData((prevData) => ({\r\n      ...prevData,\r\n      remindAt: new Date(`${value} ${time}`).toISOString(),\r\n    }));\r\n  };\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      if (state.currentId) {\r\n        const updatedReminder = await axios.patch(\r\n          `reminders/${state.currentId}`,\r\n          data\r\n        );\r\n        //console.log(updatedReminder.data);\r\n        dispatch({\r\n          type: UPDATE_REMINDER,\r\n          payload: updatedReminder.data,\r\n        });\r\n      } else {\r\n        const newReminder = await axios.post(\"reminders\", data);\r\n        //console.log(newReminder);\r\n        dispatch({\r\n          type: ADD_REMINDER,\r\n          payload: newReminder.data,\r\n        });\r\n        setError(null);\r\n      }\r\n      dispatch({\r\n        type: UNSET_ID,\r\n      });\r\n      setData({\r\n        title: \"\",\r\n        message: \"\",\r\n        phone: false,\r\n        email: true,\r\n        remindAt: \"\",\r\n        userEmail,\r\n        userPhone,\r\n      });\r\n    } catch (error) {\r\n      /*  error.response.data.msg &&  */\r\n      setError(error.response.data.msg);\r\n      setTimeout(() => setError(\"\"), 5000);\r\n\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"new_reminder\">\r\n      <div className=\"main_heading\">\r\n        <h2>{state.currentId ? \"UPDATE REMINDER\" : \"NEW REMINDER\"}</h2>\r\n      </div>\r\n      <div className=\"left\">\r\n        <Calender value={date} updateValue={handleDate} />\r\n      </div>\r\n      <div className=\"right\">\r\n        {error && <p className=\"error\">{error}</p>}\r\n        <form onSubmit={onSubmit}>\r\n          <input\r\n            type=\"text\"\r\n            name=\"title\"\r\n            placeholder=\"Title\"\r\n            value={data.title}\r\n            onChange={onChange}\r\n            required\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"message\"\r\n            placeholder=\"Enter Your Message\"\r\n            value={data.message}\r\n            onChange={onChange}\r\n            required\r\n          />\r\n\r\n          <TimePicker\r\n            onChange={(value) => {\r\n              handleTime(value);\r\n            }}\r\n            value={time}\r\n            hourPlaceholder=\"hh\"\r\n            minutePlaceholder=\"mm\"\r\n            required\r\n          />\r\n          <div className=\"options\">\r\n            <label>Send Notification on?</label>\r\n            <div className=\"input\">\r\n              <label>Email:</label>\r\n              <input\r\n                id=\"email_check\"\r\n                type=\"checkbox\"\r\n                name=\"email\"\r\n                checked={data.email}\r\n                value={data.email}\r\n                onChange={() => {\r\n                  setData({\r\n                    ...data,\r\n                    email: !data.email,\r\n                  });\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"input\">\r\n              <label>Phone:</label>\r\n              <input\r\n                id=\"phone_check\"\r\n                type=\"checkbox\"\r\n                name=\"phone\"\r\n                checked={data.phone}\r\n                value={data.phone}\r\n                onChange={(e) => {\r\n                  setData({\r\n                    ...data,\r\n                    phone: !data.phone,\r\n                  });\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n          <button className=\"btn\" type=\"submit\">\r\n            {state.currentId ? \"Update\" : \"Create\"}\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(NewReminder);\r\n","C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\components\\Reminder.js",[],"C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\components\\Calender.js",["95"],"import React, { useState, useEffect } from \"react\";\r\nimport { datesGenerator } from \"dates-generator\";\r\nimport \"./Calender.css\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\n\r\nconst months = [\r\n  \"January\",\r\n  \"Febuary\",\r\n  \"March\",\r\n  \"April\",\r\n  \"May\",\r\n  \"June\",\r\n  \"July\",\r\n  \"August\",\r\n  \"September\",\r\n  \"October\",\r\n  \"November\",\r\n  \"December\",\r\n];\r\nconst days = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\n\r\nconst Calender = (props) => {\r\n  const d = new Date();\r\n\r\n  const [selectedDate, setSelectedDate] = useState(new Date(`${props.value}`));\r\n\r\n  const [dates, setDates] = useState([]);\r\n  const [calendar, setCalendar] = useState({\r\n    month: selectedDate.getMonth(),\r\n    year: selectedDate.getFullYear(),\r\n  });\r\n\r\n  useEffect(\r\n    () => {\r\n      const body = {\r\n        month: calendar.month,\r\n        year: calendar.year,\r\n      };\r\n\r\n      const { dates, nextMonth, nextYear, previousMonth, previousYear } =\r\n        datesGenerator(body);\r\n      setDates([...dates]);\r\n      setCalendar({\r\n        ...calendar,\r\n        nextMonth,\r\n        nextYear,\r\n        previousMonth,\r\n        previousYear,\r\n      });\r\n    },\r\n    [\r\n      /* selectedDate */\r\n    ]\r\n  );\r\n\r\n  const onClickNext = () => {\r\n    const body = { month: calendar.nextMonth, year: calendar.nextYear };\r\n    const { dates, nextMonth, nextYear, previousMonth, previousYear } =\r\n      datesGenerator(body);\r\n\r\n    setDates([...dates]);\r\n    setCalendar({\r\n      ...calendar,\r\n      month: calendar.nextMonth,\r\n      year: calendar.nextYear,\r\n      nextMonth,\r\n      nextYear,\r\n      previousMonth,\r\n      previousYear,\r\n    });\r\n  };\r\n\r\n  const onClickPrevious = () => {\r\n    const body = { month: calendar.previousMonth, year: calendar.previousYear };\r\n    const { dates, nextMonth, nextYear, previousMonth, previousYear } =\r\n      datesGenerator(body);\r\n\r\n    setDates([...dates]);\r\n    setCalendar({\r\n      ...calendar,\r\n      month: calendar.previousMonth,\r\n      year: calendar.previousYear,\r\n      nextMonth,\r\n      nextYear,\r\n      previousMonth,\r\n      previousYear,\r\n    });\r\n  };\r\n\r\n  const onSelectDate = (date) => {\r\n    props.updateValue(\r\n      new Date(date.year, date.month, date.date).toLocaleDateString()\r\n    );\r\n    setSelectedDate(new Date(date.year, date.month, date.date));\r\n  };\r\n\r\n  return (\r\n    <div className=\"calender_container\">\r\n      <p>when would you like to get reminded?</p>\r\n      <div className=\"calender_header\">\r\n        {calendar.year < d.getFullYear() ? (\r\n          <ChevronLeftIcon\r\n            className=\"btn_month\"\r\n            style={{ display: null }}\r\n          ></ChevronLeftIcon>\r\n        ) : (\r\n          <ChevronLeftIcon\r\n            onClick={onClickPrevious}\r\n            className=\"btn_month\"\r\n          ></ChevronLeftIcon>\r\n        )}\r\n\r\n        <p className=\"month_text\">\r\n          {`${months[calendar.month]} ${calendar.year}`}\r\n        </p>\r\n        <ChevronRightIcon\r\n          onClick={onClickNext}\r\n          className=\"btn_month\"\r\n        ></ChevronRightIcon>\r\n      </div>\r\n\r\n      <div className=\"calender\">\r\n        <table style={{ width: \"100%\" }}>\r\n          <tbody>\r\n            <tr>\r\n              {days.map((day) => (\r\n                <td key={day}>\r\n                  <div className=\"weekday\">{day}</div>\r\n                </td>\r\n              ))}\r\n            </tr>\r\n\r\n            {dates.length > 0 &&\r\n              dates.map((week) => (\r\n                <tr key={JSON.stringify(week[0])}>\r\n                  {week.map((each) => (\r\n                    <td key={JSON.stringify(each)} className=\"date\">\r\n                      {new Date(\r\n                        each.year,\r\n                        each.month,\r\n                        each.date + 1\r\n                      ).getTime() < d.getTime() ? (\r\n                        <div className=\"pastdate\">{each.date}</div>\r\n                      ) : (\r\n                        <div onClick={() => onSelectDate(each)}>\r\n                          {each.date}\r\n                        </div>\r\n                      )}\r\n                    </td>\r\n                  ))}\r\n                </tr>\r\n              ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <div className=\"calender_footer\">\r\n        {calendar.year < d.getFullYear() && selectedDate.getDate() < d.getDate()\r\n          ? \"Please Select a Valid Date\"\r\n          : `Selected Date: ${selectedDate.toLocaleDateString()}`}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Calender;\r\n","C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\components\\Register.js",[],"C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\components\\Log.js",[],{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"96","replacedBy":"100"},{"ruleId":"98","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":59,"column":6,"nodeType":"104","endLine":59,"endColumn":23,"suggestions":"105"},{"ruleId":"102","severity":1,"message":"106","line":52,"column":5,"nodeType":"104","endLine":54,"endColumn":6,"suggestions":"107"},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],["108"],["109"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'date', 'time', 'userEmail', and 'userPhone'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setData' needs the current value of 'date'.","ArrayExpression",["110"],"React Hook useEffect has a missing dependency: 'calendar'. Either include it or remove the dependency array. You can also do a functional update 'setCalendar(c => ...)' if you only need 'calendar' in the 'setCalendar' call.",["111"],"no-global-assign","no-unsafe-negation",{"desc":"112","fix":"113"},{"desc":"114","fix":"115"},"Update the dependencies array to be: [currentReminder, date, time, userEmail, userPhone]",{"range":"116","text":"117"},"Update the dependencies array to be: [calendar]",{"range":"118","text":"119"},[1643,1660],"[currentReminder, date, time, userEmail, userPhone]",[1231,1265],"[calendar]"]