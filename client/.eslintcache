[{"C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\index.js":"1","C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\App.js":"2","C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\context\\UserAuthProvider.js":"3","C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\ProtectedRoute.js":"4","C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\context\\reducer.js":"5","C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\context\\setAuthToken.js":"6","C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\context\\UserAuthContext.js":"7","C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\components\\Login.js":"8","C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\components\\Footer.js":"9","C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\components\\Home.js":"10","C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\components\\About.js":"11","C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\components\\Reminders.js":"12","C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\components\\Header.js":"13","C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\components\\Dashboard.js":"14","C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\components\\UserAccount.js":"15","C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\components\\Feedback.js":"16","C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\components\\NewReminder.js":"17","C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\components\\Reminder.js":"18","C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\components\\Calender.js":"19"},{"size":327,"mtime":1621185473216,"results":"20","hashOfConfig":"21"},{"size":3745,"mtime":1621097192797,"results":"22","hashOfConfig":"21"},{"size":575,"mtime":1611599513185,"results":"23","hashOfConfig":"21"},{"size":600,"mtime":1611599526612,"results":"24","hashOfConfig":"21"},{"size":2756,"mtime":1611994204893,"results":"25","hashOfConfig":"21"},{"size":283,"mtime":1610012850008,"results":"26","hashOfConfig":"21"},{"size":117,"mtime":1609519987246,"results":"27","hashOfConfig":"21"},{"size":6761,"mtime":1621184886437,"results":"28","hashOfConfig":"21"},{"size":312,"mtime":1609589579096,"results":"29","hashOfConfig":"21"},{"size":800,"mtime":1622654150350,"results":"30","hashOfConfig":"21"},{"size":853,"mtime":1612116182203,"results":"31","hashOfConfig":"21"},{"size":1443,"mtime":1621185103276,"results":"32","hashOfConfig":"21"},{"size":1635,"mtime":1621184767585,"results":"33","hashOfConfig":"21"},{"size":1401,"mtime":1621184589494,"results":"34","hashOfConfig":"21"},{"size":1139,"mtime":1621185178371,"results":"35","hashOfConfig":"21"},{"size":4854,"mtime":1622654104204,"results":"36","hashOfConfig":"21"},{"size":6619,"mtime":1621184988935,"results":"37","hashOfConfig":"21"},{"size":1904,"mtime":1621185051734,"results":"38","hashOfConfig":"21"},{"size":4483,"mtime":1621099731590,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"chb82y",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"44"},"C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\index.js",[],"C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\App.js",[],["80","81"],"C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\context\\UserAuthProvider.js",[],"C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\ProtectedRoute.js",[],"C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\context\\reducer.js",[],"C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\context\\setAuthToken.js",[],"C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\context\\UserAuthContext.js",[],"C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\components\\Login.js",[],"C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\components\\Footer.js",[],"C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\components\\Home.js",[],"C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\components\\About.js",[],"C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\components\\Reminders.js",[],"C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\components\\Header.js",[],"C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\components\\Dashboard.js",[],"C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\components\\UserAccount.js",[],"C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\components\\Feedback.js",["82"],"C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\components\\NewReminder.js",["83"],"C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\components\\Reminder.js",[],"C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\components\\Calender.js",["84"],"import React, { useState, useEffect } from \"react\";\r\nimport { datesGenerator } from \"dates-generator\";\r\nimport \"./Calender.css\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\n\r\nconst months = [\r\n  \"January\",\r\n  \"Febuary\",\r\n  \"March\",\r\n  \"April\",\r\n  \"May\",\r\n  \"June\",\r\n  \"July\",\r\n  \"August\",\r\n  \"September\",\r\n  \"October\",\r\n  \"November\",\r\n  \"December\",\r\n];\r\nconst days = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\n\r\nconst Calender = (props) => {\r\n  const d = new Date();\r\n\r\n  const [selectedDate, setSelectedDate] = useState(new Date(`${props.value}`));\r\n\r\n  const [dates, setDates] = useState([]);\r\n  const [calendar, setCalendar] = useState({\r\n    month: selectedDate.getMonth(),\r\n    year: selectedDate.getFullYear(),\r\n  });\r\n\r\n  useEffect(() => {\r\n    const body = {\r\n      month: calendar.month,\r\n      year: calendar.year,\r\n    };\r\n    const { dates, nextMonth, nextYear, previousMonth, previousYear } =\r\n      datesGenerator(body);\r\n    setDates([...dates]);\r\n    setCalendar({\r\n      ...calendar,\r\n      nextMonth,\r\n      nextYear,\r\n      previousMonth,\r\n      previousYear,\r\n    });\r\n  }, [selectedDate]);\r\n\r\n  const onClickNext = () => {\r\n    const body = { month: calendar.nextMonth, year: calendar.nextYear };\r\n    const { dates, nextMonth, nextYear, previousMonth, previousYear } =\r\n      datesGenerator(body);\r\n\r\n    setDates([...dates]);\r\n    setCalendar({\r\n      ...calendar,\r\n      month: calendar.nextMonth,\r\n      year: calendar.nextYear,\r\n      nextMonth,\r\n      nextYear,\r\n      previousMonth,\r\n      previousYear,\r\n    });\r\n  };\r\n\r\n  const onClickPrevious = () => {\r\n    const body = { month: calendar.previousMonth, year: calendar.previousYear };\r\n    const { dates, nextMonth, nextYear, previousMonth, previousYear } =\r\n      datesGenerator(body);\r\n\r\n    setDates([...dates]);\r\n    setCalendar({\r\n      ...calendar,\r\n      month: calendar.previousMonth,\r\n      year: calendar.previousYear,\r\n      nextMonth,\r\n      nextYear,\r\n      previousMonth,\r\n      previousYear,\r\n    });\r\n  };\r\n\r\n  const onSelectDate = (date) => {\r\n    props.updateValue(\r\n      new Date(date.year, date.month, date.date).toLocaleDateString()\r\n    );\r\n    setSelectedDate(new Date(date.year, date.month, date.date));\r\n  };\r\n\r\n  return (\r\n    <div className=\"calender_container\">\r\n      <p>when would you like to get reminded?</p>\r\n      <div className=\"calender_header\">\r\n        {calendar.year < d.getFullYear() ? (\r\n          <ChevronLeftIcon\r\n            className=\"btn_month\"\r\n            style={{ display: null }}\r\n          ></ChevronLeftIcon>\r\n        ) : (\r\n          <ChevronLeftIcon\r\n            onClick={onClickPrevious}\r\n            className=\"btn_month\"\r\n          ></ChevronLeftIcon>\r\n        )}\r\n\r\n        <p className=\"month_text\">\r\n          {`${months[calendar.month]} ${calendar.year}`}\r\n        </p>\r\n        <ChevronRightIcon\r\n          onClick={onClickNext}\r\n          className=\"btn_month\"\r\n        ></ChevronRightIcon>\r\n      </div>\r\n\r\n      <div className=\"calender\">\r\n        <table style={{ width: \"100%\" }}>\r\n          <tbody>\r\n            <tr>\r\n              {days.map((day) => (\r\n                <td key={day}>\r\n                  <div className=\"weekday\">{day}</div>\r\n                </td>\r\n              ))}\r\n            </tr>\r\n\r\n            {dates.length > 0 &&\r\n              dates.map((week) => (\r\n                <tr key={JSON.stringify(week[0])}>\r\n                  {week.map((each) => (\r\n                    <td key={JSON.stringify(each)} className=\"date\">\r\n                      {new Date(\r\n                        each.year,\r\n                        each.month,\r\n                        each.date + 1\r\n                      ).getTime() < d.getTime() ? (\r\n                        <div className=\"pastdate\">{each.date}</div>\r\n                      ) : (\r\n                        <div onClick={() => onSelectDate(each)}>\r\n                          {each.date}\r\n                        </div>\r\n                      )}\r\n                    </td>\r\n                  ))}\r\n                </tr>\r\n              ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <div className=\"calender_footer\">\r\n        {calendar.year < d.getFullYear() && selectedDate.getDate() < d.getDate()\r\n          ? \"Please Select a Valid Date\"\r\n          : `Selected Date: ${selectedDate.toLocaleDateString()}`}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Calender;\r\n",{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":24,"column":13,"nodeType":"91","messageId":"92","endLine":24,"endColumn":24},{"ruleId":"93","severity":1,"message":"94","line":65,"column":6,"nodeType":"95","endLine":65,"endColumn":23,"suggestions":"96"},{"ruleId":"93","severity":1,"message":"97","line":49,"column":6,"nodeType":"95","endLine":49,"endColumn":20,"suggestions":"98"},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"no-unused-vars","'newFeedback' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'date', 'time', 'userEmail', and 'userPhone'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setData' needs the current value of 'date'.","ArrayExpression",["101"],"React Hook useEffect has a missing dependency: 'calendar'. Either include it or remove the dependency array. You can also do a functional update 'setCalendar(c => ...)' if you only need 'calendar' in the 'setCalendar' call.",["102"],"no-global-assign","no-unsafe-negation",{"desc":"103","fix":"104"},{"desc":"105","fix":"106"},"Update the dependencies array to be: [currentReminder, date, time, userEmail, userPhone]",{"range":"107","text":"108"},"Update the dependencies array to be: [calendar, selectedDate]",{"range":"109","text":"110"},[1998,2015],"[currentReminder, date, time, userEmail, userPhone]",[1188,1202],"[calendar, selectedDate]"]