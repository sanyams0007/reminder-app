[{"C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\index.js":"1","C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\App.js":"2","C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\context\\UserAuthProvider.js":"3","C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\ProtectedRoute.js":"4","C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\context\\reducer.js":"5","C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\context\\setAuthToken.js":"6","C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\context\\UserAuthContext.js":"7","C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\components\\Login.js":"8","C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\components\\Footer.js":"9","C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\components\\Home.js":"10","C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\components\\About.js":"11","C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\components\\Reminders.js":"12","C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\components\\Header.js":"13","C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\components\\Dashboard.js":"14","C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\components\\UserAccount.js":"15","C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\components\\Feedback.js":"16","C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\components\\NewReminder.js":"17","C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\components\\Reminder.js":"18","C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\components\\Calender.js":"19"},{"size":612,"mtime":1609515812458,"results":"20","hashOfConfig":"21"},{"size":3869,"mtime":1621086420540,"results":"22","hashOfConfig":"21"},{"size":575,"mtime":1611599513185,"results":"23","hashOfConfig":"21"},{"size":600,"mtime":1611599526612,"results":"24","hashOfConfig":"21"},{"size":2756,"mtime":1611994204893,"results":"25","hashOfConfig":"21"},{"size":283,"mtime":1610012850008,"results":"26","hashOfConfig":"21"},{"size":117,"mtime":1609519987246,"results":"27","hashOfConfig":"21"},{"size":6845,"mtime":1621086420574,"results":"28","hashOfConfig":"21"},{"size":312,"mtime":1609589579096,"results":"29","hashOfConfig":"21"},{"size":798,"mtime":1612116266431,"results":"30","hashOfConfig":"21"},{"size":853,"mtime":1612116182203,"results":"31","hashOfConfig":"21"},{"size":1535,"mtime":1611916988947,"results":"32","hashOfConfig":"21"},{"size":1702,"mtime":1621086420570,"results":"33","hashOfConfig":"21"},{"size":1488,"mtime":1621086420563,"results":"34","hashOfConfig":"21"},{"size":1358,"mtime":1612078358472,"results":"35","hashOfConfig":"21"},{"size":5047,"mtime":1621086420566,"results":"36","hashOfConfig":"21"},{"size":7181,"mtime":1621086420580,"results":"37","hashOfConfig":"21"},{"size":2001,"mtime":1621086420600,"results":"38","hashOfConfig":"21"},{"size":5189,"mtime":1621086420559,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"chb82y",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"42"},"C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\index.js",[],["82","83"],"C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\App.js",[],"C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\context\\UserAuthProvider.js",[],"C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\ProtectedRoute.js",[],"C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\context\\reducer.js",[],"C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\context\\setAuthToken.js",[],"C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\context\\UserAuthContext.js",[],"C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\components\\Login.js",[],"C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\components\\Footer.js",[],"C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\components\\Home.js",[],"C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\components\\About.js",[],"C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\components\\Reminders.js",[],"C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\components\\Header.js",[],"C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\components\\Dashboard.js",[],"C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\components\\UserAccount.js",[],"C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\components\\Feedback.js",["84"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./Feedback.css\";\r\nimport { withRouter } from \"react-router-dom\";\r\n//import UserAuthContext from \"../context/UserAuthContext\";\r\nimport axios from \"axios\";\r\n\r\nconst Feedback = () => {\r\n  //const { state, dispatch } = useContext(UserAuthContext);\r\n  const [old, setOld] = useState(false);\r\n  const [feedback, setFeedback] = useState({\r\n    name: \"\",\r\n    vote: \"\",\r\n    message: \"\",\r\n  });\r\n\r\n  const onChange = (e) => {\r\n    setFeedback({\r\n      ...feedback,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const newFeedback = await axios.post(\r\n        \"https://edayreminder-app.herokuapp.com/feedback\",\r\n        feedback\r\n      );\r\n    } catch (error) {\r\n      console.log(error.response.data);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const getFeedback = async () => {\r\n      try {\r\n        let oldFeedback = await axios.get(\r\n          \"https://edayreminder-app.herokuapp.com/feedback\"\r\n        );\r\n        console.log(oldFeedback);\r\n        if (oldFeedback.data === null) {\r\n          setFeedback({\r\n            name: \"\",\r\n            vote: \"\",\r\n            message: \"\",\r\n          });\r\n          //setOld(false);\r\n        } else {\r\n          //setFeedback(oldFeedback.data);\r\n          setOld(true);\r\n        }\r\n      } catch (error) {\r\n        console.log(error.response.data);\r\n      }\r\n    };\r\n    getFeedback();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"feedback\">\r\n      <div className=\"form-container\">\r\n        {old ? (\r\n          <header>\r\n            <h2 id=\"title\">Feedback Form </h2>\r\n            <p id=\"description\">\r\n              <em>already submiited feedback</em>\r\n            </p>\r\n          </header>\r\n        ) : (\r\n          <>\r\n            <header>\r\n              <h2 id=\"title\">Feedback Form </h2>\r\n              <p id=\"description\">\r\n                <em>\r\n                  Thank you for taking the time to help us improve the platform\r\n                </em>\r\n              </p>\r\n            </header>\r\n            <form className=\"survey-form\" onSubmit={onSubmit}>\r\n              <div className=\"qa\">\r\n                <label htmlFor=\"name\" className=\"question\">\r\n                  Name\r\n                </label>\r\n                <input\r\n                  name=\"name\"\r\n                  type=\"text\"\r\n                  className=\"answer\"\r\n                  required\r\n                  placeholder=\"Enter your name\"\r\n                  onChange={onChange}\r\n                  value={feedback.name}\r\n                />\r\n              </div>\r\n              <div className=\"qa\">\r\n                <label className=\"question\">\r\n                  Would you recommend our app to a friend ?\r\n                </label>\r\n                <div className=\"radio_options answer\">\r\n                  <div className=\"radio_option\">\r\n                    <input\r\n                      type=\"radio\"\r\n                      name=\"vote\"\r\n                      value=\"Definitely\"\r\n                      onChange={onChange}\r\n                    />\r\n                    <label className=\"radio-options\" htmlFor=\"op-one\">\r\n                      Definitely\r\n                    </label>\r\n                  </div>\r\n                  <div className=\"radio_option\">\r\n                    <input\r\n                      type=\"radio\"\r\n                      name=\"vote\"\r\n                      value=\"Not sure\"\r\n                      onChange={onChange}\r\n                    />\r\n                    <label className=\"radio-options\" htmlFor=\"op-two\">\r\n                      Not sure\r\n                    </label>\r\n                  </div>\r\n                  <div className=\"radio_option\">\r\n                    <input\r\n                      type=\"radio\"\r\n                      id=\"op-three\"\r\n                      name=\"vote\"\r\n                      value=\"Maybe\"\r\n                      onChange={onChange}\r\n                    />\r\n                    <label className=\"radio-options\" htmlFor=\"op-one\">\r\n                      Maybe\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"qa\">\r\n                <label id=\"comments\" className=\"question\">\r\n                  How was your experience using the app ?\r\n                </label>\r\n                <textarea\r\n                  name=\"message\"\r\n                  rows=\"10\"\r\n                  className=\"answer\"\r\n                  id=\"text-area\"\r\n                  placeholder=\"Enter your comments here...\"\r\n                  onChange={onChange}\r\n                  value={feedback.message}\r\n                ></textarea>\r\n              </div>\r\n              <div className=\"qa\">\r\n                <button type=\"submit\" className=\"submit answer\">\r\n                  Submit\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(Feedback);\r\n","C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\components\\NewReminder.js",["85"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Calender from \"./Calender\";\r\nimport TimePicker from \"react-time-picker\";\r\nimport \"./NewReminder.css\";\r\nimport UserAuthContext from \"../context/UserAuthContext\";\r\nimport { UPDATE_REMINDER, ADD_REMINDER, UNSET_ID } from \"../context/reducer\";\r\nimport moment from \"moment\";\r\n\r\nconst NewReminder = () => {\r\n  const { state, dispatch } = useContext(UserAuthContext);\r\n  const [serverError, setServerError] = useState(null);\r\n  const currentReminder = state.currentId\r\n    ? state.reminders.find((p) => p._id === state.currentId)\r\n    : null;\r\n  const userEmail = state.user.email;\r\n  const userPhone = state.user.phone;\r\n  console.log(userPhone);\r\n  let d = new Date();\r\n\r\n  const [time, setTime] = useState(\r\n    state.currentId\r\n      ? moment(currentReminder.remindAt).format(\"HH:mm\")\r\n      : d.getHours() + \":\" + d.getMinutes()\r\n  );\r\n\r\n  const [date, setDate] = useState(\r\n    state.currentId\r\n      ? moment(currentReminder.remindAt).format(\"L\")\r\n      : d.toLocaleDateString()\r\n  );\r\n\r\n  const [data, setData] = useState({\r\n    title: \"\",\r\n    message: \"\",\r\n    phone: false,\r\n    email: true,\r\n    remindAt: new Date(`${date} ${time}`).toISOString(),\r\n    userEmail,\r\n    userPhone,\r\n  });\r\n\r\n  if (state.currentId) {\r\n    console.log(\">>> time \", moment(currentReminder.remindAt).format(\"LT\"));\r\n    console.log(\">>> date \", moment(currentReminder.remindAt).format(\"L\"));\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (currentReminder !== null) {\r\n      //setTime(moment(currentReminder.remindAt).format(\"HH:mm\"));\r\n      //setDate(moment(currentReminder.remindAt).format(\"L\"));\r\n      //console.log(date)\r\n      setData(currentReminder);\r\n    } else {\r\n      setData({\r\n        title: \"\",\r\n        message: \"\",\r\n        phone: false,\r\n        email: true,\r\n        remindAt: new Date(`${date} ${time}`).toISOString(),\r\n        userEmail,\r\n        userPhone,\r\n      });\r\n    }\r\n    /* setData(prevData => ({\r\n            ...prevData,\r\n            \"remindAt\": new Date(`${date} ${time}`).toISOString(),\r\n        })); */\r\n  }, [currentReminder]);\r\n\r\n  const onChange = (e) => {\r\n    setData((prevData) => ({\r\n      ...prevData,\r\n      [e.target.name]: e.target.value,\r\n    }));\r\n  };\r\n\r\n  const handleTime = (value) => {\r\n    setTime(value);\r\n    setData((prevData) => ({\r\n      ...prevData,\r\n      remindAt: new Date(`${date} ${value}`).toISOString(),\r\n    }));\r\n  };\r\n\r\n  const handleDate = (value) => {\r\n    setDate(value);\r\n    setData((prevData) => ({\r\n      ...prevData,\r\n      remindAt: new Date(`${value} ${time}`).toISOString(),\r\n    }));\r\n  };\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      if (state.currentId) {\r\n        //console.log(state.currentId);\r\n        const updatedReminder = await axios.patch(\r\n          `https://edayreminder-app.herokuapp.com/reminders/${state.currentId}`,\r\n          data\r\n        );\r\n        console.log(updatedReminder.data);\r\n        dispatch({\r\n          type: UPDATE_REMINDER,\r\n          payload: updatedReminder.data,\r\n        });\r\n      } else {\r\n        const newReminder = await axios.post(\r\n          \"https://edayreminder-app.herokuapp.com/reminders\",\r\n          data\r\n        );\r\n        //console.log(newReminder);\r\n        dispatch({\r\n          type: ADD_REMINDER,\r\n          payload: newReminder.data,\r\n        });\r\n        setServerError(null);\r\n      }\r\n      dispatch({\r\n        type: UNSET_ID,\r\n      });\r\n      setData({\r\n        title: \"\",\r\n        message: \"\",\r\n        phone: false,\r\n        email: true,\r\n        remindAt: \"\",\r\n        userEmail,\r\n        userPhone,\r\n      });\r\n    } catch (error) {\r\n      console.log(error.response);\r\n      error.response.data.msg && setServerError(error.response.data.msg);\r\n      console.log(serverError);\r\n    }\r\n    /* catch (error) {\r\n             //error.response.data.msg && setServerError(error.response.data.msg);\r\n             console.log(error.response.data.msg);\r\n         }\r\n  */\r\n  };\r\n\r\n  return (\r\n    <div className=\"new_reminder\">\r\n      <div className=\"main_heading\">\r\n        {\" \"}\r\n        <h2>{state.currentId ? \"UPDATE REMINDER\" : \"NEW REMINDER\"}</h2>\r\n      </div>\r\n      <div className=\"left\">\r\n        <Calender value={date} updateValue={handleDate} />\r\n      </div>\r\n      <div className=\"right\">\r\n        <form onSubmit={onSubmit}>\r\n          {serverError && (\r\n            <div className=\"create_error\">\r\n              <small>{serverError}</small>\r\n              <button onClick={() => setServerError(\"\")}>X</button>\r\n            </div>\r\n          )}\r\n          <input\r\n            type=\"text\"\r\n            name=\"title\"\r\n            placeholder=\"Title\"\r\n            value={data.title}\r\n            onChange={onChange}\r\n            required\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"message\"\r\n            placeholder=\"Enter Your Message\"\r\n            value={data.message}\r\n            onChange={onChange}\r\n            required\r\n          />\r\n\r\n          <TimePicker\r\n            onChange={(value) => {\r\n              handleTime(value);\r\n              /*  setData(prevData => ({\r\n                                 ...prevData,\r\n                                 \"remindAt\": new Date(`${date} ${value}`).toISOString(),\r\n                             })) */\r\n              /*  console.log(new Date(`${date} ${time}`).toISOString())\r\n                             console.log(value)\r\n                             console.log(\"remind At >>>\", moment(data.remindAt).format('lll'))\r\n                             console.log(\"remind At >>>\", moment(new Date(`${date} ${time}`).toISOString()).format('lll')) */\r\n            }}\r\n            value={time}\r\n            hourPlaceholder=\"hh\"\r\n            minutePlaceholder=\"mm\"\r\n            required=\"true\"\r\n          />\r\n          <div className=\"options\">\r\n            <label>Send Notification on?</label>\r\n            <div className=\"input\">\r\n              <label>Email:</label>\r\n              <input\r\n                id=\"email_check\"\r\n                type=\"checkbox\"\r\n                name=\"email\"\r\n                checked={data.email}\r\n                value={data.email}\r\n                onChange={() => {\r\n                  setData({\r\n                    ...data,\r\n                    email: !data.email,\r\n                  });\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"input\">\r\n              <label>Phone:</label>\r\n              <input\r\n                id=\"phone_check\"\r\n                type=\"checkbox\"\r\n                name=\"phone\"\r\n                checked={data.phone}\r\n                value={data.phone}\r\n                onChange={(e) => {\r\n                  setData({\r\n                    ...data,\r\n                    phone: !data.phone,\r\n                  });\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n          <button class=\"btn\" type=\"submit\">\r\n            {state.currentId ? \"Update\" : \"Create\"}\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(NewReminder);\r\n","C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\components\\Reminder.js",[],"C:\\Users\\SanyamS\\Documents\\My Dev\\Clever PG\\Projects\\reminder-app\\client\\src\\components\\Calender.js",["86"],"import React, { useState, useEffect } from \"react\";\r\nimport { datesGenerator } from \"dates-generator\";\r\nimport \"./Calender.css\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\n\r\nconst months = [\r\n  \"January\",\r\n  \"Febuary\",\r\n  \"March\",\r\n  \"April\",\r\n  \"May\",\r\n  \"June\",\r\n  \"July\",\r\n  \"August\",\r\n  \"September\",\r\n  \"October\",\r\n  \"November\",\r\n  \"December\",\r\n];\r\nconst days = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\n\r\nconst Calender = (props) => {\r\n  const d = new Date();\r\n  //new Date(`${dateTime.date} ${dateTime.time}`)\r\n  const [selectedDate, setSelectedDate] = useState(new Date(`${props.value}`));\r\n  //setSelectedDate(new Date(`${props.value}`));\r\n  console.log(\"from calender \", props.value);\r\n  console.log(\"selected \", selectedDate);\r\n  const [dates, setDates] = useState([]);\r\n  const [calendar, setCalendar] = useState({\r\n    month: selectedDate.getMonth(),\r\n    year: selectedDate.getFullYear(),\r\n  });\r\n\r\n  useEffect(() => {\r\n    const body = {\r\n      month: calendar.month,\r\n      year: calendar.year,\r\n    };\r\n    const { dates, nextMonth, nextYear, previousMonth, previousYear } =\r\n      datesGenerator(body);\r\n    setDates([...dates]);\r\n    setCalendar({\r\n      ...calendar,\r\n      nextMonth,\r\n      nextYear,\r\n      previousMonth,\r\n      previousYear,\r\n    });\r\n    //handleDate(props.value);\r\n    //setSelectedDate(new Date(`${props.value}`))\r\n    //props.updateValue(selectedDate.toLocaleDateString());\r\n  }, [selectedDate]);\r\n\r\n  const onClickNext = () => {\r\n    const body = { month: calendar.nextMonth, year: calendar.nextYear };\r\n    const { dates, nextMonth, nextYear, previousMonth, previousYear } =\r\n      datesGenerator(body);\r\n\r\n    setDates([...dates]);\r\n    setCalendar({\r\n      ...calendar,\r\n      month: calendar.nextMonth,\r\n      year: calendar.nextYear,\r\n      nextMonth,\r\n      nextYear,\r\n      previousMonth,\r\n      previousYear,\r\n    });\r\n  };\r\n\r\n  const onClickPrevious = () => {\r\n    const body = { month: calendar.previousMonth, year: calendar.previousYear };\r\n    const { dates, nextMonth, nextYear, previousMonth, previousYear } =\r\n      datesGenerator(body);\r\n\r\n    setDates([...dates]);\r\n    setCalendar({\r\n      ...calendar,\r\n      month: calendar.previousMonth,\r\n      year: calendar.previousYear,\r\n      nextMonth,\r\n      nextYear,\r\n      previousMonth,\r\n      previousYear,\r\n    });\r\n  };\r\n\r\n  const onSelectDate = (date) => {\r\n    props.updateValue(\r\n      new Date(date.year, date.month, date.date).toLocaleDateString()\r\n    );\r\n\r\n    setSelectedDate(new Date(date.year, date.month, date.date));\r\n  };\r\n\r\n  return (\r\n    <div className=\"calender_container\">\r\n      <p>when would you like to get reminded?</p>\r\n      <div className=\"calender_header\">\r\n        {calendar.year < d.getFullYear() ? (\r\n          <ChevronLeftIcon\r\n            className=\"btn_month\"\r\n            style={{ display: null }}\r\n          ></ChevronLeftIcon>\r\n        ) : (\r\n          <ChevronLeftIcon\r\n            onClick={onClickPrevious}\r\n            className=\"btn_month\"\r\n          ></ChevronLeftIcon>\r\n        )}\r\n\r\n        <p className=\"month_text\">\r\n          {`${months[calendar.month]} ${calendar.year}`}\r\n        </p>\r\n        <ChevronRightIcon\r\n          onClick={onClickNext}\r\n          className=\"btn_month\"\r\n        ></ChevronRightIcon>\r\n      </div>\r\n\r\n      <div className=\"calender\">\r\n        <table style={{ width: \"100%\" }}>\r\n          <tbody>\r\n            <tr>\r\n              {days.map((day) => (\r\n                <td key={day}>\r\n                  <div className=\"weekday\">{day}</div>\r\n                </td>\r\n              ))}\r\n            </tr>\r\n\r\n            {dates.length > 0 &&\r\n              dates.map((week) => (\r\n                <tr key={JSON.stringify(week[0])}>\r\n                  {week.map((each) => (\r\n                    <td key={JSON.stringify(each)} className=\"date\">\r\n                      {new Date(\r\n                        each.year,\r\n                        each.month,\r\n                        each.date + 1\r\n                      ).getTime() < d.getTime() ? (\r\n                        <div className=\"pastdate\">{each.date}</div>\r\n                      ) : (\r\n                        <div onClick={() => onSelectDate(each)}>\r\n                          {each.date}\r\n                        </div>\r\n                      )}\r\n                    </td>\r\n                  ))}\r\n                </tr>\r\n              ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <div className=\"calender_footer\">\r\n        {calendar.year < d.getFullYear() && selectedDate.getDate() < d.getDate()\r\n          ? \"Please Select a Valid Date\"\r\n          : `Selected Date: ${selectedDate.toLocaleDateString()}`}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Calender;\r\n",{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":26,"column":13,"nodeType":"93","messageId":"94","endLine":26,"endColumn":24},{"ruleId":"95","severity":1,"message":"96","line":62,"column":6,"nodeType":"97","endLine":62,"endColumn":23,"suggestions":"98"},{"ruleId":"95","severity":1,"message":"99","line":54,"column":6,"nodeType":"97","endLine":54,"endColumn":20,"suggestions":"100"},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"no-unused-vars","'newFeedback' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'date', 'time', 'userEmail', and 'userPhone'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setData' needs the current value of 'date'.","ArrayExpression",["103"],"React Hook useEffect has a missing dependency: 'calendar'. Either include it or remove the dependency array. You can also do a functional update 'setCalendar(c => ...)' if you only need 'calendar' in the 'setCalendar' call.",["104"],"no-global-assign","no-unsafe-negation",{"desc":"105","fix":"106"},{"desc":"107","fix":"108"},"Update the dependencies array to be: [currentReminder, date, time, userEmail, userPhone]",{"range":"109","text":"110"},"Update the dependencies array to be: [calendar, selectedDate]",{"range":"111","text":"112"},[1845,1862],"[currentReminder, date, time, userEmail, userPhone]",[1519,1533],"[calendar, selectedDate]"]